/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { AIAgentWallet, AIAgentWalletInterface } from "../AIAgentWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_aiAgent",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dailyLimit",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newLimit",
        type: "uint256",
      },
    ],
    name: "DailyLimitChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "locked",
        type: "bool",
      },
    ],
    name: "WalletLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "WhitelistUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "aiAgent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dailyLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dailySpent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastResetTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_aiAgent",
        type: "address",
      },
    ],
    name: "setAIAgent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_limit",
        type: "uint256",
      },
    ],
    name: "setDailyLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "updateWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012c1380380620012c1833981810160405281019062000037919062000173565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600281905550426004819055505050620001ba565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200010082620000d3565b9050919050565b6200011281620000f3565b81146200011e57600080fd5b50565b600081519050620001328162000107565b92915050565b6000819050919050565b6200014d8162000138565b81146200015957600080fd5b50565b6000815190506200016d8162000142565b92915050565b600080604083850312156200018d576200018c620000ce565b5b60006200019d8582860162000121565b9250506020620001b0858286016200015c565b9150509250929050565b6110f780620001ca6000396000f3fe6080604052600436106100c65760003560e01c80639b19251a1161007f578063a6d5b73211610059578063a6d5b73214610261578063b20d30a91461028c578063db2e21bc146102b5578063ff9413d8146102cc576100cd565b80639b19251a146101ce578063a21771241461020b578063a4e2d63414610236576100cd565b80630bc6b89c146100d25780630d392cd9146100fd57806367eeba0c14610126578063683ae083146101515780636ebe941b1461017a5780638da5cb5b146101a3576100cd565b366100cd57005b600080fd5b3480156100de57600080fd5b506100e76102e3565b6040516100f49190610b17565b60405180910390f35b34801561010957600080fd5b50610124600480360381019061011f9190610bcd565b6102e9565b005b34801561013257600080fd5b5061013b61040b565b6040516101489190610b17565b60405180910390f35b34801561015d57600080fd5b5061017860048036038101906101739190610c39565b610411565b005b34801561018657600080fd5b506101a1600480360381019061019c9190610c79565b6106e3565b005b3480156101af57600080fd5b506101b86107b5565b6040516101c59190610cb5565b60405180910390f35b3480156101da57600080fd5b506101f560048036038101906101f09190610c79565b6107d9565b6040516102029190610cdf565b60405180910390f35b34801561021757600080fd5b506102206107f9565b60405161022d9190610b17565b60405180910390f35b34801561024257600080fd5b5061024b6107ff565b6040516102589190610cdf565b60405180910390f35b34801561026d57600080fd5b50610276610812565b6040516102839190610cb5565b60405180910390f35b34801561029857600080fd5b506102b360048036038101906102ae9190610cfa565b610838565b005b3480156102c157600080fd5b506102ca610907565b005b3480156102d857600080fd5b506102e16109fe565b005b60035481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610377576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036e90610daa565b60405180910390fd5b80600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d82826040516103ff929190610dca565b60405180910390a15050565b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049890610e65565b60405180910390fd5b600560009054906101000a900460ff16156104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e890610ed1565b60405180910390fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168061054b57506002548111155b61058a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058190610f3d565b60405180910390fd5b478111156105cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490610fa9565b60405180910390fd5b620151806004546105de9190610ff8565b42106105f4576000600381905550426004819055505b600254816003546106059190610ff8565b1115610646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063d90611078565b60405180910390fd5b80600360008282546106589190610ff8565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156106a5573d6000803e3d6000fd5b507f4e86ad0da28cbaaaa7e93e36c43b32696e970535225b316f1b84fbf30bdc04e882826040516106d7929190611098565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610771576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076890610daa565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915054906101000a900460ff1681565b60045481565b600560009054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bd90610daa565b60405180910390fd5b806002819055507fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c816040516108fc9190610b17565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098c90610daa565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156109fb573d6000803e3d6000fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8390610daa565b60405180910390fd5b600560009054906101000a900460ff1615600560006101000a81548160ff0219169083151502179055507fe99a1418b120a08123983b0b2c36ec4a00fc0bac3d611ee2e7945c64d8e112e2600560009054906101000a900460ff16604051610af49190610cdf565b60405180910390a1565b6000819050919050565b610b1181610afe565b82525050565b6000602082019050610b2c6000830184610b08565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6282610b37565b9050919050565b610b7281610b57565b8114610b7d57600080fd5b50565b600081359050610b8f81610b69565b92915050565b60008115159050919050565b610baa81610b95565b8114610bb557600080fd5b50565b600081359050610bc781610ba1565b92915050565b60008060408385031215610be457610be3610b32565b5b6000610bf285828601610b80565b9250506020610c0385828601610bb8565b9150509250929050565b610c1681610afe565b8114610c2157600080fd5b50565b600081359050610c3381610c0d565b92915050565b60008060408385031215610c5057610c4f610b32565b5b6000610c5e85828601610b80565b9250506020610c6f85828601610c24565b9150509250929050565b600060208284031215610c8f57610c8e610b32565b5b6000610c9d84828501610b80565b91505092915050565b610caf81610b57565b82525050565b6000602082019050610cca6000830184610ca6565b92915050565b610cd981610b95565b82525050565b6000602082019050610cf46000830184610cd0565b92915050565b600060208284031215610d1057610d0f610b32565b5b6000610d1e84828501610c24565b91505092915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610d94602183610d27565b9150610d9f82610d38565b604082019050919050565b60006020820190508181036000830152610dc381610d87565b9050919050565b6000604082019050610ddf6000830185610ca6565b610dec6020830184610cd0565b9392505050565b7f4f6e6c79204149206167656e742063616e2063616c6c20746869732066756e6360008201527f74696f6e00000000000000000000000000000000000000000000000000000000602082015250565b6000610e4f602483610d27565b9150610e5a82610df3565b604082019050919050565b60006020820190508181036000830152610e7e81610e42565b9050919050565b7f57616c6c6574206973206c6f636b656400000000000000000000000000000000600082015250565b6000610ebb601083610d27565b9150610ec682610e85565b602082019050919050565b60006020820190508181036000830152610eea81610eae565b9050919050565b7f5472616e73616374696f6e206e6f7420616c6c6f776564000000000000000000600082015250565b6000610f27601783610d27565b9150610f3282610ef1565b602082019050919050565b60006020820190508181036000830152610f5681610f1a565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610f93601483610d27565b9150610f9e82610f5d565b602082019050919050565b60006020820190508181036000830152610fc281610f86565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061100382610afe565b915061100e83610afe565b925082820190508082111561102657611025610fc9565b5b92915050565b7f4461696c79206c696d6974206578636565646564000000000000000000000000600082015250565b6000611062601483610d27565b915061106d8261102c565b602082019050919050565b6000602082019050818103600083015261109181611055565b9050919050565b60006040820190506110ad6000830185610ca6565b6110ba6020830184610b08565b939250505056fea26469706673582212205405e1f9b93bb5fc7a707a0c5737adbd60d32bf1992431e6660648d07662337364736f6c63430008130033";

type AIAgentWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AIAgentWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AIAgentWallet__factory extends ContractFactory {
  constructor(...args: AIAgentWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _aiAgent: AddressLike,
    _dailyLimit: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_aiAgent, _dailyLimit, overrides || {});
  }
  override deploy(
    _aiAgent: AddressLike,
    _dailyLimit: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_aiAgent, _dailyLimit, overrides || {}) as Promise<
      AIAgentWallet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AIAgentWallet__factory {
    return super.connect(runner) as AIAgentWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AIAgentWalletInterface {
    return new Interface(_abi) as AIAgentWalletInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AIAgentWallet {
    return new Contract(address, _abi, runner) as unknown as AIAgentWallet;
  }
}
